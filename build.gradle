plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.flywaydb.flyway' version '9.22.3'   // ⬅️ 추가
}

group = 'com.tomy'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// google BOM
	implementation platform("com.google.cloud:libraries-bom:26.52.0") // 버전은 고정(BOM)
	implementation "com.google.cloud:google-cloud-vision"   // 버전 생략(=BOM이 관리)

	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Database
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Swagger (OpenAPI)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// Excel Importer
	implementation 'org.apache.poi:poi:5.2.3'
	implementation 'org.apache.poi:poi-ooxml:5.2.3'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}
flyway {
	// 운영 자격증명은 넣지 마세요! 로컬 개발 DB만.
	url = 'jdbc:mysql://127.0.0.1:3306/tomy_db?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true&characterEncoding=utf8'
	user = 'tomy_app'
	password = 'StrongPass!123'
	// classpath: 경로를 쓰는 경우엔 JAR 내 리소스라서 Gradle플러그인이 못읽습니다.
	// Gradle 태스크는 보통 "filesystem:"로 소스 트리 경로를 지정합니다.
	locations = ['filesystem:src/main/resources/db/migration']
}


tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}
